# -*- coding: utf-8 -*-
"""practice.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-LIF9TJF6PEhntFO4U0sc6SHYqxq7tIs
"""

from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.decomposition import PCA
from sklearn.pipeline import Pipeline
import joblib
from sklearn.linear_model import LogisticRegression
from sklearn.tree import DecisionTreeClassifier
from sklearn.ensemble import RandomForestClassifier

df = load_iris()
x_train,x_test,y_train,y_test = train_test_split(df.data,df.target,test_size = 0.3,random_state=0)

# Save code 
# clean code

pipeline_lr = Pipeline([('scalar1',StandardScaler()),
                          ('pca1',PCA(n_components=2)),
                          ('lr_classifier',LogisticRegression(random_state=0))])

pipeline_dtree = Pipeline([('scalar2',StandardScaler()),
                           ('pca2',PCA(n_components=2)),
                            ('d_clf',DecisionTreeClassifier())])

pipeline_rforest = Pipeline([('sclar2',StandardScaler()),
                             ('pca2',PCA(n_components=2)),
                             ('r_clf',RandomForestClassifier())])

pipelines = [pipeline_lr,pipeline_dtree,pipeline_rforest]

pipe_dict = {0:'LR',1:'DTREE',2:'RFOREST'}
for pipe in pipelines:
  pipe.fit(x_train,y_train)

L = []
for i,model in enumerate(pipelines):
  L.append([[pipe_dict[i]],[model.score(x_test,y_test)]])
L.sort()

print(f'Model name->{L[-1][0]} with Accuracy-> {L[-1][1]}')

